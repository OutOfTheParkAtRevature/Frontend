trigger:
- staging

pr:
- staging

pool:
  vmImage: ubuntu-18.04

stages:
  - stage: analyze
    displayName: Analyze
    jobs:
      - job: analyze
        steps:
          - task: Npm@1
            displayName: Install Dependencies
            inputs:
              command: install
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'sonarcloud connection'
              scannerMode: CLI
              organization: 121420-dotnet-sonarcloud
              configFile: sonar-project.properties
          - task: Npm@1
            displayName: Analyze Build
            inputs:
              command: custom
              customCommand: run build -- --prod
          - task: Npm@1
            displayName: Analyze Tests
            inputs:
              command: custom
              customCommand: run test-headless -- --code-coverage
          - task: PublishCodeCoverageResults@1
            displayName: Publish Code Coverage
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: coverage/cobertura-coverage.xml
              reportDirectory: coverage
              failIfCoverageEmpty: true
          - task: SonarCloudAnalyze@1
            displayName: Run Code Analysis
          - task: SonarCloudPublish@1
            displayName: Publish Code Analysis
  - stage:
    displayName: Register
    jobs:
      - job: register
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            inputs:
              command: login
              containerRegistry: 'Container Registry Connection'
          - script: |
              docker image build -t outofthepark15226.azurecr.io/frontend:latest .
              docker image push outofthepark15226.azurecr.io/frontend:latest
          - task: Docker@2
            inputs:
              command: logout
              containerRegistry: 'Container Registry Connection'
